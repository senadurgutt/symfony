{% extends 'base.html.twig' %}

{% block title %}{{ product.title }}{% endblock %}

{% block mainContent %}
    <style>
        .product-card {
            display: flex;
            border: 1px solid #ddd;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            padding: 15px;
            background-color: #f9f2f4;
            flex-direction: row;
        }

        .product-image {
            flex: 0 0 50%; /* Görsel kısmını %50 genişlikte tutar */
            max-width: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 20px;
            position: relative;
        }

        .product-image img {
            width: 100%;
            height: auto;
            object-fit: cover;
        }

        .product-details {
            flex: 1;
            padding: 20px;
        }

        .product-title {
            font-size: 2rem;
            margin-bottom: 10px;
        }

        .product-description {
            font-size: 1.2rem;
            margin-bottom: 20px;
        }

        .comments {
            max-height: 200px;
            overflow-y: auto; /* Yorumların kaydırılmasını sağlar */
            margin-bottom: 15px;
            border: 1px solid #ddd;
            padding: 2px;
            border-radius: 5px;
            background-color: #E0E0E0;
        }

        .comment {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 10px 0;
            border-radius: 5px;
            display: flex;
            align-items: flex-start;
            background-color: #f9f9f9;
        }

        .comment:last-child {
            border-bottom: none;
        }

        .comment-header {
            flex: 0 0 auto;
            font-weight: bold;
            margin-right: 10px;
        }

        .comment-body {
            flex: 1;
        }

        .btn-primary {
            margin-top: 10px;
        }

        .back-button {
            margin-bottom: 20px;
        }

        .back-button a {
            display: inline-block;
            padding: 10px 20px;
            font-size: 1rem;
            color: #fff;
            background-color: #007bff;
            text-decoration: none;
            border-radius: 5px;
        }

        .back-button a:hover {
            background-color: #0056b3;
        }

        .container.mt-4 {
            margin: 10px 20px;
        }

        .kalp {
            background: url(https://cssanimation.rocks/images/posts/steps/heart.png) no-repeat 0 0;
            height: 120px;
            width: 120px;
            position: absolute;
            top: 15px; /* Üstten 15px uzaklık */
            right: 15px; /* Sağdan 15px uzaklık */
            cursor: pointer;
            transition: background 0.3s;
        }

        .kalp.active {
            background: url(https://www.pngrepo.com/png/283512/512/red-heart.png) no-repeat 0 0;
        }

    </style>

    <div class="container mt-4">
        <div class="back-button">
            <a href="{{ path('categories', { id: category.id }) }}">Geri Dön</a>
        </div>
        <div class="product-card">
            <div class="product-image">
                <img src="{{ asset(product.image) }}" class="img-fluid" alt="{{ product.title }}">
                <div class="kalp" id="kalp-button"></div>
            </div>
            <div class="product-details">
                <h1 class="product-title">{{ product.title }}</h1>
                <p class="product-description">{{ product.description }}</p>

                <h2>Yorumlar</h2>
                <div class="comments" id="comments-list">
                    {% for comment in comments %}
                        <div class="comment">
                            <div class="comment-header">
                                <strong>{{ comment.member.name }} {{ comment.member.surname }}</strong>
                            </div>
                            <div class="comment-body">
                                {{ comment.comment }}
                            </div>
                        </div>
                    {% else %}
                        <p>Henüz yorum yapılmamış.</p>
                    {% endfor %}
                </div>

                <h3>Yorum Yap</h3>
                {{ form_start(comment_form, { 'attr': { 'id': 'comment-form' } }) }}
                {{ form_row(comment_form.comment) }}
                <button type="submit" class="btn btn-primary">Yorum Gönder</button>
                {{ form_end(comment_form) }}
            </div>
        </div>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var form = document.getElementById('comment-form');
            if (form) {
                form.addEventListener('submit', function (event) {
                    event.preventDefault(); // Formun varsayılan olarak gönderilmesini engeller

                    var formData = new FormData(form);

                    fetch(form.action, {
                        method: form.method,
                        body: formData,
                        headers: {
                            'Accept': 'application/json'
                        }
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                var commentsList = document.getElementById('comments-list');
                                var newComment = document.createElement('div');
                                newComment.classList.add('comment');
                                newComment.innerHTML = '<p><strong>' + data.comment.member.name + ' ' + data.comment.member.surname + ':</strong> ' + data.comment.comment + '</p>';
                                commentsList.appendChild(newComment);
                                form.reset();
                            } else {
                                alert('Yorum gönderiminde bir hata oluştu');
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            alert('Yorum gönderiminde bir hata oluştu');
                        });
                });
            }

            var kalpButton = document.getElementById('kalp-button');

            if (kalpButton) {
                kalpButton.addEventListener('click', function () {
                    kalpButton.classList.toggle('active');
                });
            }

        });
    </script>
{% endblock %}
